# todo: use circleci work spaces to share data between jobs
version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker.io/stephenlautier/netcore-docker-ci:5.0.0-net6
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - run:
          name: Print environment versions
          command: |
            NPM_V=$(npm -v)
            echo npm version':' $NPM_V
            DOTNET_CLI_V=$(dotnet --version)
            echo dotnet cli version':' $DOTNET_CLI_V
      - checkout
      - run:
          name: Restore and build
          command: |
            SOLUTION=$(node -p "require('./package.json').solution")

            echo "restore packages"
            dotnet restore $SOLUTION /p:Configuration=Release

            echo "dotnet publish"
            dotnet publish $SOLUTION -c Release
      - run:
          name: test
          command: npm test
  publish:
    working_directory: /app
    docker:
      - image: docker.io/stephenlautier/netcore-docker-ci:5.0.0-net6
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - checkout
      - deploy:
          name: Publish NuGet
          command: |
            SOLUTION=$(node -p "require('./package.json').solution")
            PACKAGE_VERSION=$(node -p "require('./package.json').version")

            if [ $CIRCLE_BRANCH == "develop" ]; then
              PACKAGE_VERSION=$PACKAGE_VERSION-dev-$CIRCLE_BUILD_NUM
            fi

            dotnet pack $SOLUTION /p:PackageVersion=$PACKAGE_VERSION -o ../../ -c release
            dotnet nuget push ../../*.nupkg -k $nuget_api_key -s "nuget.org"

            echo "git tag"
            git tag $PACKAGE_VERSION
            git push --tags
workflows:
  version: 2
  build_and_publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop